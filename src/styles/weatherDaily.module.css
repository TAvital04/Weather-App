.contents {
    border-radius: 1rem;
}
:root[data-dark-mode = "dark"] .contents {
    background-color: rgb(from var(--sky-bg)
        clamp(0, calc(r + var(--tone-step) * 2), 255)
        clamp(0, calc(g + var(--tone-step) * 2), 255)
        clamp(0, calc(b + var(--tone-step) * 2), 255)
    );
}

.body {
    display: flex;
    flex-direction: row;
    overflow-x: auto;
}

.element {
    display: flex;
    flex-direction: column;
    flex: 0 0 33.3333%;

    border-radius: 1rem;
}
:root[data-dark-mode = "dark"] .element {
    background-color: rgb(from var(--sky-bg)
        clamp(0, calc(r + var(--tone-step) * 3), 255)
        clamp(0, calc(g + var(--tone-step) * 3), 255)
        clamp(0, calc(b + var(--tone-step) * 3), 255)
    );
}

.elementChild {
    border-radius: 1rem;
}
:root[data-dark-mode = "dark"] .elementChild {
    background-color: rgb(from var(--sky-bg)
        clamp(0, calc(r + var(--tone-step) * 4), 255)
        clamp(0, calc(g + var(--tone-step) * 4), 255)
        clamp(0, calc(b + var(--tone-step) * 4), 255)
    );
}